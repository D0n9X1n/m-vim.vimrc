priority -48
snippet cmp
int cmp(const void* a, const void* b) {
    return *(int*)a - *(int*)b;
}
endsnippet

snippet fori
int i;
for (i = 0; i < ${1}; i++) {
	${2}
}
endsnippet

snippet for
for (i = 0; i < ${1}; i++) {
	${2}
}
endsnippet

snippet read
freopen("./in.txt","r",stdin);
endsnippet

snippet r
return ${1};
endsnippet

snippet linuxc
#include <assert.h>
#include <ctype.h>
#include <errno.h>
#include <float.h>
#include <iso646.h>
#include <limits.h>
#include <locale.h>
#include <math.h>
#include <setjmp.h>
#include <signal.h>
#include <stdarg.h>
#include <stdint.h>
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <wchar.h>
#include <wctype.h>

int main(int argc, char *argv[]) {
${1}
	return 0;
}
endsnippet

snippet while
while (${1}) {
	${2}
}
endsnippet

snippet if
if (${1}) {
	${2}
}
endsnippet

snippet chead "#ifndef ... #define ... #endif"
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define ${1:SYMBOL} ${2:VALUE}
#endif /* ifndef $1 */
endsnippet

snippet fun "function"
${1:void}
${2:function_name}($3)
{
	${VISUAL}$0
}
endsnippet

snippet fund "function declaration"
${1:void}
${2:function_name}($3);
endsnippet


